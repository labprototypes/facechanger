services:
  # ---- FRONTEND (Next.js) ----
  - type: web
    name: web-frontend
    env: node
    rootDir: apps/web
    buildCommand: npm install && npm run build
    startCommand: npm run start
    plan: starter
    envVars:
      # прокидываем в фронт публичный URL API
      - key: NEXT_PUBLIC_API_BASE_URL
        fromService:
          type: web
          name: api-backend
          envVarKey: RENDER_EXTERNAL_URL

  # ---- BACKEND (FastAPI) ----
  - type: web
    name: api-backend
    env: python
    rootDir: apps/api
    buildCommand: pip install -r requirements.txt
    # важно слушать переменную PORT на Render
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port ${PORT:-10000}
    plan: starter
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: pg
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: S3_ENDPOINT
        value: https://s3.amazonaws.com
      - key: S3_REGION
        value: us-east-1
      - key: S3_BUCKET
        value: your-bucket-name
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: REPLICATE_API_TOKEN
        sync: false
      - key: REPLICATE_MODEL
        value: owner/model:version
      - key: REPLICATE_WEBHOOK_SECRET
        sync: false
      - key: CORS_ALLOW_ORIGINS
        value: "*"

  # ---- WORKER (Celery) ----
  - type: worker
    name: celery-worker
    env: python
    rootDir: apps/worker
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A worker.app worker --loglevel=INFO --concurrency=2
    plan: starter
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      # если воркеру нужны доступы к S3/Replicate — добавим те же секреты
      - key: S3_ENDPOINT
        value: https://s3.amazonaws.com
      - key: S3_REGION
        value: us-east-1
      - key: S3_BUCKET
        value: your-bucket-name
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: REPLICATE_API_TOKEN
        sync: false
      - key: REPLICATE_MODEL
        value: owner/model:version
      - key: REPLICATE_WEBHOOK_SECRET
        sync: false

  # ---- REDIS ----
  - type: redis
    name: redis
    ipAllowList: []

databases:
  - name: pg
    plan: starter
